name: Node CI

on:
  push:
  pull_request:

env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - run: npm ci
      - run: npm run lint
      
      - name: Run tests with coverage
        run: npm test -- --coverage --coverageReporters=lcov --coverageDirectory=coverage
      
      - name: SonarQube Scan
        if: ${{ github.event_name != 'pull_request' }}
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN1 }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        with:
          args: >
            -Dsonar.projectKey=SandActor_frontend-project-46
            -Dsonar.projectName=frontend-project-46
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=src
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
      
      - name: Upload to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          # Download and install codeclimate reporter
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          
          # Prepare build
          ./cc-test-reporter before-build
          
          # Upload coverage
          ./cc-test-reporter after-build \
            --exit-code 0 \
            --coverage-input-type lcov \
            --prefix $(pwd) 